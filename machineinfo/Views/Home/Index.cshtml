@model PaginatedList<FailureVM>
@using machineinfo.ViewModels

@{
    ViewData["Title"] = "MachineInfo";
}

<div class="text-center">
    <h1 class="display-4">Failures overview</h1>
    <p></p>
</div>

<div>
    <table class="table table-hover">
        <thead>
            <th>
                ID
            </th>
            <th>
                Name
            </th>
            <th>
                Description
            </th>
            <th>
                Machine
            </th>
            <th>
                Status
            </th>
            <th>
                Priority
            </th>
            <th>
                EntryTime
            </th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.FailureId</td>
                    <td><a asp-controller="Failures" asp-action="Details" asp-route-id="@item.FailureId">@item.Name</a></td>
                    <td>@item.Description</td>
                    <td>@item.MachineName</td>
                    <td>@item.Status</td>
                    <td>@item.Priority</td>
                    <td>@item.EntryTime</td>
                    <td><a asp-controller="Failures" asp-action="Resolve" asp-route-id="@item.FailureId" class="btn btn-primary">Resolved</a></td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-primary @prevDisabled">
        Previous
    </a>

    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>